import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Globe, Shield, AlertTriangle, Eye, TrendingUp } from 'lucide-react';
import { motion } from 'framer-motion';

export default function ThreatIntelligence({ vulnerabilities, onIntelUpdate }) {
    const [threatIntel, setThreatIntel] = useState([]);
    const [darkWebMentions, setDarkWebMentions] = useState([]);
    const [exploitKits, setExploitKits] = useState([]);

    useEffect(() => {
        loadThreatIntelligence();
    }, [vulnerabilities]);

    const loadThreatIntelligence = () => {
        // Simulated threat intelligence data
        const intel = [
            {
                cve: 'CVE-2024-1234',
                darkWebMentions: 12,
                exploitAvailable: true,
                ransomwareUsage: true,
                activeCampaigns: 3,
                lastSeen: '2024-01-15',
                severity: 'Critical',
                sources: ['Underground Forum A', 'Telegram Channel B', 'Dark Market C']
            },
            {
                cve: 'CVE-2024-5678',
                darkWebMentions: 2,
                exploitAvailable: false,
                ransomwareUsage: false,
                activeCampaigns: 0,
                lastSeen: '2024-01-10',
                severity: 'High',
                sources: ['Security Blog', 'Vendor Advisory']
            }
        ];

        const mentions = [
            {
                source: 'Underground Forum Alpha',
                content: 'New exploit for Log4j available, includes automated scanner',
                timestamp: '2024-01-15T10:30:00Z',
                credibility: 'High',
                threat_level: 'Critical'
            },
            {
                source: 'Telegram Channel Beta',
                content: 'Selling RCE exploit pack, includes multiple CVEs',
                timestamp: '2024-01-14T15:22:00Z',
                credibility: 'Medium',
                threat_level: 'High'
            }
        ];

        const kits = [
            {
                name: 'EK-Alpha',
                exploits: ['CVE-2024-1234', 'CVE-2024-5678'],
                price: '$500',
                users: 45,
                lastUpdate: '2024-01-12'
            }
        ];

        setThreatIntel(intel);
        setDarkWebMentions(mentions);
        setExploitKits(kits);
        onIntelUpdate(intel);
    };

    const getThreatBadgeColor = (level) => ({
        Critical: 'bg-red-500 text-white',
        High: 'bg-orange-500 text-white',
        Medium: 'bg-yellow-500 text-black',
        Low: 'bg-blue-500 text-white'
    }[level] || 'bg-gray-500 text-white');

    return (
        <div className="space-y-6">
            {/* Threat Intelligence Overview */}
            <Card className="border-0 shadow-lg">
                <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                        <Globe className="w-5 h-5 text-red-600" />
                        Active Threat Intelligence
                    </CardTitle>
                </CardHeader>
                <CardContent>
                    <div className="space-y-4">
                        {threatIntel.map((intel, idx) => (
                            <motion.div
                                key={intel.cve}
                                initial={{ opacity: 0, y: 20 }}
                                animate={{ opacity: 1, y: 0 }}
                                transition={{ delay: idx * 0.1 }}
                                className="border rounded-lg p-4 hover:shadow-md transition-shadow"
                            >
                                <div className="flex items-start justify-between mb-3">
                                    <div>
                                        <h4 className="font-semibold text-lg">{intel.cve}</h4>
                                        <p className="text-sm text-gray-600">Last seen: {intel.lastSeen}</p>
                                    </div>
                                    <Badge className={getThreatBadgeColor(intel.severity)}>
                                        {intel.severity}
                                    </Badge>
                                </div>

                                <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-4">
                                    <div className="text-center">
                                        <p className="text-2xl font-bold text-red-600">{intel.darkWebMentions}</p>
                                        <p className="text-xs text-gray-500">Dark Web Mentions</p>
                                    </div>
                                    <div className="text-center">
                                        <p className="text-2xl font-bold text-orange-600">{intel.activeCampaigns}</p>
                                        <p className="text-xs text-gray-500">Active Campaigns</p>
                                    </div>
                                    <div className="text-center">
                                        {intel.exploitAvailable ? (
                                            <Shield className="w-6 h-6 text-red-500 mx-auto" />
                                        ) : (
                                            <Shield className="w-6 h-6 text-green-500 mx-auto" />
                                        )}
                                        <p className="text-xs text-gray-500">Exploit Available</p>
                                    </div>
                                    <div className="text-center">
                                        {intel.ransomwareUsage ? (
                                            <AlertTriangle className="w-6 h-6 text-red-500 mx-auto" />
                                        ) : (
                                            <AlertTriangle className="w-6 h-6 text-gray-300 mx-auto" />
                                        )}
                                        <p className="text-xs text-gray-500">Ransomware Usage</p>
                                    </div>
                                </div>

                                <div>
                                    <p className="text-sm font-medium mb-2">Intelligence Sources:</p>
                                    <div className="flex flex-wrap gap-2">
                                        {intel.sources.map(source => (
                                            <Badge key={source} variant="outline" className="text-xs">
                                                {source}
                                            </Badge>
                                        ))}
                                    </div>
                                </div>
                            </motion.div>
                        ))}
                    </div>
                </CardContent>
            </Card>

            {/* Dark Web Mentions */}
            <Card className="border-0 shadow-lg">
                <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                        <Eye className="w-5 h-5 text-purple-600" />
                        Recent Dark Web Activity
                    </CardTitle>
                </CardHeader>
                <CardContent>
                    <div className="space-y-3">
                        {darkWebMentions.map((mention, idx) => (
                            <motion.div
                                key={idx}
                                initial={{ opacity: 0, x: -20 }}
                                animate={{ opacity: 1, x: 0 }}
                                transition={{ delay: idx * 0.1 }}
                                className="p-3 bg-gray-50 rounded-lg"
                            >
                                <div className="flex items-start justify-between mb-2">
                                    <div>
                                        <p className="font-medium text-sm">{mention.source}</p>
                                        <p className="text-xs text-gray-500">
                                            {new Date(mention.timestamp).toLocaleString()}
                                        </p>
                                    </div>
                                    <div className="flex gap-2">
                                        <Badge variant="outline" className="text-xs">
                                            {mention.credibility}
                                        </Badge>
                                        <Badge className={getThreatBadgeColor(mention.threat_level)} variant="secondary">
                                            {mention.threat_level}
                                        </Badge>
                                    </div>
                                </div>
                                <p className="text-sm text-gray-700">{mention.content}</p>
                            </motion.div>
                        ))}
                    </div>
                </CardContent>
            </Card>

            {/* Exploit Kits */}
            <Card className="border-0 shadow-lg">
                <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                        <TrendingUp className="w-5 h-5 text-orange-600" />
                        Active Exploit Kits
                    </CardTitle>
                </CardHeader>
                <CardContent>
                    <div className="space-y-3">
                        {exploitKits.map((kit, idx) => (
                            <div key={kit.name} className="border rounded-lg p-4">
                                <div className="flex items-center justify-between mb-3">
                                    <h4 className="font-semibold">{kit.name}</h4>
                                    <div className="flex items-center gap-2">
                                        <Badge variant="destructive">{kit.price}</Badge>
                                        <Badge variant="outline">{kit.users} users</Badge>
                                    </div>
                                </div>
                                <div className="text-sm text-gray-600">
                                    <p>Includes exploits: {kit.exploits.join(', ')}</p>
                                    <p>Last update: {kit.lastUpdate}</p>
                                </div>
                            </div>
                        ))}
                    </div>
                </CardContent>
            </Card>
        </div>
    );
}